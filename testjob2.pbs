#!/bin/bash
### set the number of nodes
### set the number of PEs per node
#PBS -l nodes=10:ppn=32
### set the wallclock time
#PBS -l walltime=06:30:00
### set the job name
#PBS -N testjob
### set the job stdout and stderr
#PBS -e $PBS_JOBID.err
#PBS -o $PBS_JOBID.out
### set email notification
##PBS -m bea
##PBS -M username@host
### In case of multiple allocations, select which one to charge
##PBS -A xyz

# NOTE: lines that begin with "#PBS" are not interpreted by the shell but ARE 
# used by the batch system, wheras lines that begin with multiple # signs, 
# like "##PBS" are considered "commented out" by the batch system 
# and have no effect.  

# If you launched the job in a directory prepared for the job to run within, 
# you'll want to cd to that directory
# [uncomment the following line to enable this]
cd /u/sciteam/ghale/escode_1 

# Alternatively, the job script can create its own job-ID-unique directory 
# to run within.  In that case you'll need to create and populate that 
# directory with executables and perhaps inputs
# [uncomment and customize the following lines to enable this behavior] 
# mkdir -p /scratch/sciteam/$USER/$PBS_JOBID
# cd /scratch/sciteam/$USER/$PBS_JOBID
# cp /scratch/job/setup/directory/* .

# To add certain modules that you do not have added via ~/.modules 
#. /opt/modules/default/init/bash
#module load craype-hugepages2M  perftools

## aprun -n 128 -N 32 ./t1 20 20 20
## aprun -n 256 -N 32 ./t1 40 40 40 > outfile_40_40_40_8nodes
## aprun -n 9600 -N 32 ./t1 40 40 40 > outfile_40_40_40_300nodes
##aprun -n 320 -N 32 ./t1 10 10 10 > outfile_10_10_10_10nodes

## !! ----------- scf runs
#aprun -n 512 -N 32 ./scf 8 8 64 500 > testrun_scf2_8_8_64 
aprun -n 320 ./scf 80 80 80 10 > testrun_scf2_80_80_8
## !! ------------
##aprun -n 960 -N 32 ./t1 120 120 120 > out120_30nodes
##aprun -n 4096 -N 32 ./t1 60 60 60 > outfile_60_60_60_1024
##aprun -n 4096 -N 32 ./t1 40 40 40 > outfile_40_40_40_128nodes

## aprun -n 32768 -N 32 ./t1 120 120 120 > outfile_120_120_120_32768

### launch the application
### redirecting stdin and stdout if needed
### NOTE: (the "in" file must exist for input)

## for 108 atom case, time~10 seconds, save for later.

### For more information see the man page for aprun
